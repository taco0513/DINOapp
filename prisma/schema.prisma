// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String    @id @default(cuid())
  name            String?
  email           String    @unique
  emailVerified   DateTime?
  image           String?
  googleId        String?   @unique
  passportCountry String    @default("OTHER")
  timezone        String    @default("UTC")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  accounts             Account[]
  sessions             Session[]
  countryVisits        CountryVisit[]
  notificationSettings NotificationSettings?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model CountryVisit {
  id              String    @id @default(cuid())
  userId          String
  country         String
  entryDate       DateTime
  exitDate        DateTime?
  visaType        String
  maxDays         Int
  passportCountry String
  notes           String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Optimized indexes for common queries
  @@index([userId])                    // User's trips
  @@index([country])                   // Country-based filtering
  @@index([entryDate])                 // Date-based ordering
  @@index([userId, entryDate])         // User trips by date (most common)
  @@index([userId, country])           // User trips by country
  @@index([entryDate, exitDate])       // Date range queries
  @@index([visaType])                  // Visa type filtering
  @@index([passportCountry])           // Passport country queries
  @@index([userId, entryDate, exitDate]) // Schengen calculations
  @@index([createdAt])                 // Recent trips
}

model NotificationSettings {
  id                  String @id @default(cuid())
  userId              String @unique
  visaExpiryDays      String @default("7,14,30") // JSON array as string
  schengenWarningDays Int    @default(10)
  emailEnabled        Boolean @default(true)
  pushEnabled         Boolean @default(false)
  updatedAt           DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write
  checks: write

jobs:
  # 1. Label PR
  label:
    name: Auto Label PR
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/labeler@v4
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          
  # 2. PR Size Check
  size-check:
    name: PR Size Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Check PR size
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const additions = pr.additions;
            const deletions = pr.deletions;
            const total = additions + deletions;
            
            let label = '';
            if (total < 50) label = 'size/XS';
            else if (total < 200) label = 'size/S';
            else if (total < 500) label = 'size/M';
            else if (total < 1000) label = 'size/L';
            else label = 'size/XL';
            
            // Add size label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: [label]
            });
            
            // Warn if PR is too large
            if (total > 1000) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: '⚠️ This PR is quite large (>' + total + ' lines). Consider breaking it into smaller PRs for easier review.'
              });
            }
            
  # 3. Danger JS checks
  danger:
    name: Danger JS
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run Danger
        run: npx danger ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  # 4. Preview Deployment
  preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      pull-requests: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        id: vercel-deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          
      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.vercel-deploy.outputs.preview-url }}';
            const comment = `🚀 **Preview Deployment Ready!**
            
            🔗 Preview: ${url}
            
            📊 Lighthouse scores will be posted once the deployment is ready.`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
            
  # 5. Visual Regression Tests
  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    needs: preview
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run Percy visual tests
        run: npx percy exec -- npm run test:visual
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          
  # 6. Update PR Status
  update-status:
    name: Update PR Status
    runs-on: ubuntu-latest
    needs: [size-check, danger, preview]
    if: always()
    
    steps:
      - name: Update PR status check
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const sha = context.payload.pull_request.head.sha;
            
            const allJobs = ${{ toJSON(needs) }};
            const failed = Object.values(allJobs).some(job => job.result === 'failure');
            
            await github.rest.repos.createCommitStatus({
              owner,
              repo,
              sha,
              state: failed ? 'failure' : 'success',
              context: 'PR Validation',
              description: failed ? 'Some checks failed' : 'All checks passed'
            });